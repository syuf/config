#使用okhttp3.OKHttpClient
ribbon.okhttp.enable=true
#是否开启熔断超时
hystrix.command.default.execution.timeout.enabled=true
#熔断时间,此值必须大于ribbo超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=500000 
# 设置连接超时时间
ribbon.ConnectTimeout=3000
# 设置读取超时时间
ribbon.ReadTimeout=30000
# 对所有操作请求都进行重试
ribbon.OkToRetryOnAllOperations=true
# 切换实例的重试次数
ribbon.MaxAutoRetriesNextServer=2
# 对当前实例的重试次数
ribbon.MaxAutoRetries=1
# rabbitmq ip地址
spring.rabbitmq.addresses=192.168.135.131:5672
# rabbitmq用户名
spring.rabbitmq.username=syuf
# rabbitmq密码
spring.rabbitmq.password=123456
# rabbitmq虚拟主机
spring.rabbitmq.virtual-host=/
# 生产者发消息否消息确认
spring.rabbitmq.publisher-confirms=true
# 生产者发消息失败是否回退
spring.rabbitmq.publisher-returns=true
# rabbitmq 回退标志位
spring.rabbitmq.template.mandatory=true
# 消费者是否需要手动ack
spring.rabbitmq.listener.direct.acknowledge-mode=manual
#后端实现的框架
spring.cache.type=redis
# server host
spring.redis.host=192.168.135.131 
# Redis服务器连接端口	
spring.redis.port=6379
# 连接超时时间（毫秒）
spring.redis.timeout=30000
spring.redis.database=0
#spring.redis.cluster.max-redirects=3
#spring.redis.cluster.nodes=192.168.135.131:6379
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active=8
# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=1
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.lettuce.pool.max-wait=-1
spring.sleuth.web.client.enabled=true
# 将采样比例设置为 1.0，也就是全部都需要。默认是 0.1
spring.sleuth.sampler.probability=1.0 
# 指定了 Zipkin 服务器的地址
spring.zipkin.base-url=http://localhost:9411/ 