#--------------------------------------------logback配置--------------------------------------------
#logging.config=classpath:logback/logback-spring.xml
#--------------------------------------------datasource配置--------------------------------------------
spring.datasource.url=jdbc:oracle:thin:@172.16.96.55:1521:DEV  
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.username=zf_shop  
spring.datasource.password=zf_shop  
# 使用druid数据源  
spring.datasource.druid.initialSize=2
# 初始化大小，最小，最大      
spring.datasource.druid.minIdle=1  
spring.datasource.druid.maxActive=20  
# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000 
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计
spring.datasource.druid.filters=stat,wall
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000  
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000  
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL  
spring.datasource.druid.testWhileIdle=true  
spring.datasource.druid.testOnBorrow=false  
spring.datasource.druid.testOnReturn=false  
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.poolPreparedStatements=true  
spring.datasource.druid.MaxPoolPreparedStatementPerConnectionSize=20
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.useGlobalDataSourceStat=true  

#--------------------------------------------mybatis配置---------------------------------------------
mybatis.mapper-locations.classpath=/mapper/*Mapper.xml  
#--------------------------------------------hystrix配置--------------------------------------------
#是否开启熔断超时
hystrix.command.default.execution.timeout.enabled=true
#熔断时间,此值必须大于ribbo超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=500000 
#--------------------------------------------ribbon配置-----------------------------------------------
#使用okhttp3.OKHttpClient
ribbon.okhttp.enable=true
# 设置连接超时时间
ribbon.ConnectTimeout=3000
# 设置读取超时时间
ribbon.ReadTimeout=30000
# 对所有操作请求都进行重试
ribbon.OkToRetryOnAllOperations=true
# 切换实例的重试次数
ribbon.MaxAutoRetriesNextServer=2
# 对当前实例的重试次数
ribbon.MaxAutoRetries=1
#--------------------------------------------rabbitmq配置--------------------------------------------
# rabbitmq ip地址
spring.rabbitmq.addresses=172.16.97.113:5672,172.16.97.114:5672,172.16.97.115:5672
# rabbitmq用户名
spring.rabbitmq.username=admin
# rabbitmq密码
spring.rabbitmq.password=admin
# rabbitmq虚拟主机
spring.rabbitmq.virtual-host=/
# 生产者发消息否消息确认
spring.rabbitmq.publisher-confirms=true
# 生产者发消息失败是否回退
spring.rabbitmq.publisher-returns=true
# rabbitmq 回退标志位
spring.rabbitmq.template.mandatory=true
# 消费者是否需要手动ack
spring.rabbitmq.listener.direct.acknowledge-mode=manual
#---------------------------------------------redis配置-----------------------------------------------
#后端实现的框架
spring.cache.type=redis
# server host
spring.redis.host=172.16.96.57
# Redis服务器连接端口	
spring.redis.port=8801
# 连接超时时间（毫秒）
spring.redis.timeout=30000
spring.redis.database=0
spring.redis.cluster.max-redirects=3
spring.redis.cluster.nodes=172.16.96.57:8801,172.16.96.57:8802,172.16.96.57:8803,172.16.96.57:8804,172.16.96.57:8805,172.16.96.57:8806
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active=8
# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=1
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.lettuce.pool.max-wait=-1
#-----------------------------------------------sleuth配置---------------------------------------------
spring.sleuth.web.client.enabled=true
# 将采样比例设置为 1.0，也就是全部都需要。默认是 0.1
spring.sleuth.sampler.probability=1.0 
# 指定了 Zipkin 服务器的地址
spring.zipkin.base-url=http://localhost:9411/ 